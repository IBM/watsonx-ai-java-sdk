/*
 * Copyright IBM Corp. 2025 - 2025
 * SPDX-License-Identifier: Apache-2.0
 */
package com.ibm.watsonx.ai.chat;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNull;
import org.junit.jupiter.api.Test;
import com.ibm.watsonx.ai.chat.model.ExtractionTags;

public class ExtractionTagsTest {

    @Test
    void test_extraction_tags_1() {

        var text = """
            <think>I'm thinking</think>
            This is the response""";

        var extractionTags = ExtractionTags.of("<think>");
        assertEquals("I'm thinking", extractionTags.extractThinking(text));
        assertEquals("This is the response", extractionTags.extractResponse(text));

        extractionTags = ExtractionTags.of("think");
        assertEquals("I'm thinking", extractionTags.extractThinking(text));
        assertEquals("This is the response", extractionTags.extractResponse(text));
    }

    @Test
    void test_extraction_tags_2() {

        var text = """
            <think>I'm thinking</think>
            <response>This is the response</response>""";

        var extractionTags = ExtractionTags.of("<think>", "<response>");
        assertEquals("I'm thinking", extractionTags.extractThinking(text));
        assertEquals("This is the response", extractionTags.extractResponse(text));

        extractionTags = ExtractionTags.of("think", "response");
        assertEquals("I'm thinking", extractionTags.extractThinking(text));
        assertEquals("This is the response", extractionTags.extractResponse(text));
    }

    @Test
    void test_extraction_tags_3() {

        var text = """
            <think>I'm thinking</think>
            <response>This is the response</response> !</response>""";

        var extractionTags = ExtractionTags.of("<think>", "<response>");
        assertEquals("I'm thinking", extractionTags.extractThinking(text));
        assertEquals("This is the response</response> !", extractionTags.extractResponse(text));
    }

    @Test
    void test_extraction_tags_4() {

        var text = """
            <think>I'm thinking</think>This is the response""";

        var extractionTags = ExtractionTags.of("<think>");
        assertEquals("I'm thinking", extractionTags.extractThinking(text));
        assertEquals("This is the response", extractionTags.extractResponse(text));
    }

    @Test
    void test_extraction_tags_5() {

        var text =
            """
                <think>The query is asking about the usage of the `<response>` tag, \
                which is part of a specific markup or templating language, \
                likely used in AI or chatbot development frameworks. Typically, \
                this tag is used to demarcate the section of a response generated by an AI model.

                In many systems, such as those using Markdown or similar structured text formats, \
                the `<response>` tag would signify the beginning and end of the AI's generated answer within \
                a larger template or HTML structure.

                Here's a general idea of how it might be used:

                - The `<response>` tag opens the section where the AI's textual output will be placed.
                - Any content (text, images, links, etc.) generated by the AI model would fall within these tags.
                - A corresponding closing tag, `</response>`, would mark the end of the AI's response section.

                Without specific documentation or context about the particular system or framework being used, \
                the exact syntax and usage details can vary. Commonly, it might look something like this in a \
                hypothetical template:

                ```html
                <div>
                    <p>User's question goes here...</p>
                    <response>
                        AI's detailed answer here.
                    </response>
                    <p>Additional context or follow-up suggestions...</p>
                </div>
                ```

                In this example, `AI's detailed answer here` would be the content dynamically filled by the AI model, \
                enclosed within the `<response>` tags.

                To accurately answer, I would need more context about the specific system or language being used, \
                but generally, the `<response>` tag is intended to isolate and format the AI-generated part of a response.\
                </think>\
                <response>\
                ### Usage of `<response>` Tag:

                The `<response>` tag is typically used in AI or chatbot development frameworks to encapsulate \
                the AI-generated part of a response within a structured document or template. Here’s a general \
                guide on how it might be utilized:

                1. **Isolation of AI Output**: The primary function of the `<response>` tag is to clearly delineate \
                the section of text or content that is the AI's response. This helps in maintaining a clean separation \
                between the user's input, any intermediate processing instructions, and the final AI-generated output.

                2. **Template Integration**: In systems that use HTML or similar markup languages, the `<response>` \
                tag might look something like this:

                ```html
                    <div>
                        <p>Here is the user's question or context...</p>
                        <response>
                            This is the AI's generated answer.
                        </response>
                        <p>Additional information or follow-up suggestions...</p>
                    </div>
                ```

                In this example, "This is the AI's generated answer" would be replaced dynamically with the content produced \
                by the AI model.
                </response>""";

        var extractionTags = ExtractionTags.of("<think>", "<response>");
        assertEquals("""
            The query is asking about the usage of the `<response>` tag, \
            which is part of a specific markup or templating language, \
            likely used in AI or chatbot development frameworks. Typically, \
            this tag is used to demarcate the section of a response generated by an AI model.

            In many systems, such as those using Markdown or similar structured text formats, \
            the `<response>` tag would signify the beginning and end of the AI's generated answer within \
            a larger template or HTML structure.

            Here's a general idea of how it might be used:

            - The `<response>` tag opens the section where the AI's textual output will be placed.
            - Any content (text, images, links, etc.) generated by the AI model would fall within these tags.
            - A corresponding closing tag, `</response>`, would mark the end of the AI's response section.

            Without specific documentation or context about the particular system or framework being used, \
            the exact syntax and usage details can vary. Commonly, it might look something like this in a \
            hypothetical template:

            ```html
            <div>
                <p>User's question goes here...</p>
                <response>
                    AI's detailed answer here.
                </response>
                <p>Additional context or follow-up suggestions...</p>
            </div>
            ```

            In this example, `AI's detailed answer here` would be the content dynamically filled by the AI model, \
            enclosed within the `<response>` tags.

            To accurately answer, I would need more context about the specific system or language being used, \
            but generally, the `<response>` tag is intended to isolate and format the AI-generated part of a response.\
            """, extractionTags.extractThinking(text));
        assertEquals("""
            ### Usage of `<response>` Tag:

            The `<response>` tag is typically used in AI or chatbot development frameworks to encapsulate \
            the AI-generated part of a response within a structured document or template. Here’s a general \
            guide on how it might be utilized:

            1. **Isolation of AI Output**: The primary function of the `<response>` tag is to clearly delineate \
            the section of text or content that is the AI's response. This helps in maintaining a clean separation \
            between the user's input, any intermediate processing instructions, and the final AI-generated output.

            2. **Template Integration**: In systems that use HTML or similar markup languages, the `<response>` \
            tag might look something like this:

            ```html
                <div>
                    <p>Here is the user's question or context...</p>
                    <response>
                        This is the AI's generated answer.
                    </response>
                    <p>Additional information or follow-up suggestions...</p>
                </div>
            ```

            In this example, "This is the AI's generated answer" would be replaced dynamically with the content produced \
            by the AI model.""", extractionTags.extractResponse(text));
    }

    @Test
    void test_extraction_tags_6() {
        var extractionTags = ExtractionTags.of("<think>", "<response>");
        assertNull(extractionTags.extractThinking("Hello!"));
        assertNull(extractionTags.extractResponse("Hello!"));
    }
}
